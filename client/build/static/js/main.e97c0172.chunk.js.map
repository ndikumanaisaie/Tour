{"version":3,"sources":["utilities/index.js","api/index.js","features/postSlice.js","components/PostCard.jsx","components/Spinner.jsx","components/Pagination.jsx","pages/Home.jsx","features/authSlice.js","pages/Login.jsx","pages/Register.jsx","pages/Post.jsx","components/Header.jsx","components/RelatedPosts.jsx","components/CommentSection.jsx","pages/SinglePost.jsx","pages/Dashboard.jsx","components/LoadingToRedirect.jsx","components/PrivateRoute.jsx","pages/NotFound.jsx","pages/TagPosts.jsx","App.js","index.js"],"names":["str","count","length","substring","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","googleSignIn","result","post","getPosts","page","get","getPost","id","commentPost","value","deletePost","delete","updatePost","updatedPostData","patch","getPostsByUser","userId","getPostsBySearch","search","getPostsByTag","tag","getRelatedPosts","tags","createPost","createAsyncThunk","navigate","toast","rejectWithValue","postData","response","success","console","log","data","api","likePost","_id","postSlice","createSlice","name","initialState","posts","userPosts","tagPosts","relatedPosts","currentPage","numberOfPages","error","isLoading","reducers","setCurrentPage","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","meta","arg","map","filter","userPost","actions","PostCard","imageFile","description","title","likes","user","googleId","dispatch","useDispatch","Likes","find","like","fas","icon","far","className","style","maxWidth","src","alt","position","height","i","key","to","float","color","onClick","excerpt","Spinner","role","marginTop","width","Pagination","center","rounded","Home","useSelector","useEffect","margin","padding","alignContent","login","formValue","formData","register","authSlice","setUser","setLogout","clear","setItem","stringify","email","password","Login","useState","setFormValue","auth","clientId","useNavigate","gapi","load","auth2","init","scope","onInputChange","e","target","onSubmit","preventDefault","noValidate","label","type","onChange","required","validation","size","render","renderProp","disabled","fab","onSuccess","res","profileObj","tokenId","onFailure","cookiePolicy","firstName","lastName","confirmPassword","Register","Post","setPostData","tagErrMsg","setTagErrMsg","useParams","postToEdit","handleAddTag","handleDeleteTag","deleteTag","handleClear","alignment","placeholder","variant","fullWidth","onAdd","onDelete","multiple","onDone","base64","Header","show","setShow","setSearch","decode","exp","Date","getTime","fixed","expand","background","href","fontWeight","fontSize","aria-expanded","aria-label","navbar","right","marginRight","marginLeft","RelatedPosts","postId","splice","relatedPost","CommentSection","comments","setComments","comment","setComment","commentsRef","useRef","handleClick","newComments","current","scrollIntoView","behavior","c","split","ref","SinglePost","widith","maxHeight","moment","createdAt","fromNow","Dashboard","md","fluid","window","confirm","LoadingToRedirect","setCount","interval","setInterval","currentCount","clearInterval","PrivateRoute","children","NotFound","TagPosts","tagPost","App","path","element","store","configureStore","reducer","authReducer","postReducer","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.e97c0172.chunk.js","sourcesContent":["export default (str, count) => {\r\n  if (str.length > count){\r\n    str = str.substring(0, count) + '...';\r\n  }\r\n  return str;\r\n}\r\n","/* eslint-disable consistent-return */\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://toursapplication.herokuapp.com/'})\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')){\r\n    req.headers.authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem('profile')).token\r\n    }`\r\n  }\r\n  return req;\r\n});\r\n\r\nexport const signIn = (formData) => API.post('/users/signin', formData);\r\nexport const signUp = (formData) => API.post('/users/signup', formData);\r\nexport const googleSignIn = (result) => API.post('/users/googleSignIn', result);\r\n\r\nexport const createPost = (postData) => API.post('/posts', postData);\r\nexport const getPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const getPost = (id) => API.get(`/posts/${id}`);\r\nexport const likePost = (id) => API.patch(`/posts/like/${id}`);\r\nexport const commentPost = (id, value) => API.post(`/posts/comments/${id}`, {value});\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const updatePost = (updatedPostData, id) => API.patch(`/posts/${id}`, updatedPostData);\r\nexport const getPostsByUser = (userId) => API.get(`/posts/userPosts/${userId}`);\r\nexport const getPostsBySearch = (search) => API.get(`/posts/search?searchQuery=${search}`);\r\nexport const getPostsByTag = (tag) => API.get(`/posts/tag/${tag}`);\r\nexport const getRelatedPosts = (tags) => API.post('/posts/ralatedPosts', tags);\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as api from '../api';\r\n\r\nexport const createPost = createAsyncThunk('post/createPost', async({ updatedPostData, navigate, toast }, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.createPost(updatedPostData);\r\n    toast.success('Post created Successfully!');\r\n    navigate('/');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getPosts = createAsyncThunk('post/getPosts', async(page, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getPosts(page);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getPost = createAsyncThunk('post/getPost', async(id, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getPost(id);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const deletePost = createAsyncThunk('post/deletePost', async({id, toast}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.deletePost(id);\r\n    toast.success('Post deleted Successfully!');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const updatePost = createAsyncThunk('post/updatePost', async({id, updatedPostData, toast, navigate}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.updatePost(updatedPostData, id);\r\n    toast.success('Post updated Successfully!');\r\n    navigate('/');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getPostsByUser = createAsyncThunk('post/getPostsByUser', async(userId, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getPostsByUser(userId);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getPostsBySearch = createAsyncThunk('post/getPostBySearch', async(search, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getPostsBySearch(search);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getPostsByTag = createAsyncThunk('post/getPostByTag', async(tag, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getPostsByTag(tag);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const getRelatedPosts = createAsyncThunk('post/getRelatedPosts', async(tags, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.getRelatedPosts(tags);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const likePost = createAsyncThunk('post/likePost', async({_id}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.likePost(_id);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\nexport const commentPost = createAsyncThunk('post/commentPost', async({ id, value }, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.commentPost(id, value);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    post: {},\r\n    posts: [],\r\n    userPosts: [],\r\n    tagPosts: [],\r\n    relatedPosts: [],\r\n    currentPage: 1,\r\n    numberOfPages: null,\r\n    error: '',\r\n    isLoading: false\r\n  },\r\n  reducers:{\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n\t\tbuilder\r\n\t\t\t.addCase(createPost.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(createPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.posts = [action.payload];\r\n\t\t\t})\r\n\t\t\t.addCase(createPost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getPosts.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.posts = action.payload.data;\r\n        state.numberOfPages = action.payload.numberOfPages;\r\n        state.currentPage = action.payload.currentPage;\r\n\t\t\t})\r\n\t\t\t.addCase(getPosts.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getPost.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.post = action.payload;\r\n\t\t\t})\r\n\t\t\t.addCase(getPost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n      .addCase(likePost.pending, (state) => {})\r\n\t\t\t.addCase(likePost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        const { arg : { _id } } = action.meta;\r\n        if (_id) {\r\n          state.posts = state.posts.map((post) => post._id === _id ? action.payload: post);\r\n        }\r\n\t\t\t})\r\n\t\t\t.addCase(likePost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsByUser.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsByUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.userPosts = action.payload;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsByUser.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(deletePost.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(deletePost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        console.log('action', action);\r\n        const { arg : { id } } = action.meta;\r\n        if (id) {\r\n          state.userPosts = state.userPosts.filter((userPost) => userPost._id !== id);\r\n          state.posts = state.posts.filter((post) => post._id !== id);\r\n        }\r\n\t\t\t})\r\n\t\t\t.addCase(deletePost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(updatePost.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(updatePost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        const { arg : { id } } = action.meta;\r\n        if (id) {\r\n          state.userPosts = state.userPosts.map((userPost) => userPost._id === id ? action.payload: userPost);\r\n          state.posts = state.posts.map((post) => post._id === id ? action.payload: post);\r\n        }\r\n\t\t\t})\r\n\t\t\t.addCase(updatePost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n      .addCase(getPostsBySearch.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsBySearch.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsBySearch.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.posts = action.payload;\r\n\t\t\t})\r\n      .addCase(getPostsByTag.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsByTag.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getPostsByTag.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.tagPosts = action.payload;\r\n\t\t\t})\r\n      .addCase(getRelatedPosts.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(getRelatedPosts.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(getRelatedPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.relatedPosts = action.payload;\r\n\t\t\t})\r\n      .addCase(commentPost.pending, (state) => {\r\n\t\t\t\t// state.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(commentPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.posts = state.posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n\t\t\t})\r\n\t\t\t.addCase(commentPost.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t});\r\n\t},\r\n});\r\n\r\nexport const { setCurrentPage } = postSlice.actions;\r\n\r\nexport default postSlice.reducer;","import React from 'react';\r\nimport {\r\n  MDBCard, \r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBCardGroup,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBTooltip,\r\n} from 'mdb-react-ui-kit';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport excerpt from '../utilities/index.js'\r\nimport { likePost } from '../features/postSlice.js';\r\n\r\nconst PostCard = ({ imageFile, description, title, tags, _id, name, likes }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const userId = user?.result?._id || user?.result?.googleId;\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const Likes = () => {\r\n    if (likes.length > 0) {\r\n      return likes.find((like) => like === userId) ? (\r\n        <>\r\n          <MDBIcon fas icon=\"thumbs-up\" />\r\n          &nbsp;\r\n          {\r\n            likes.length > 2 ? (\r\n              <MDBTooltip \r\n                tag='a'\r\n                title={`You and ${likes.length -1 } other people likes this`}\r\n              >\r\n                {likes.length} Likes\r\n              </MDBTooltip>\r\n            ) : (\r\n              `${likes.length} Like${likes.length > 1 ? 's': ''}`\r\n            )\r\n          }\r\n        </>\r\n      ) : (\r\n        <>\r\n          <MDBIcon far icon='thumbs-up' />\r\n          &nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <MDBIcon far icon='thumbs-up' />\r\n        &nbsp;Like\r\n      </>\r\n    );\r\n  };\r\n  \r\n  const handleLike = () => {\r\n    dispatch(likePost({ _id }));\r\n  };\r\n  return (\r\n    <MDBCardGroup>\r\n      <MDBCard className='h-180 mt-2 d-sm-flex' style={{ maxWidth: '20rem' }}>\r\n        <MDBCardImage\r\n          src={imageFile}\r\n          alt={title}\r\n          position='top'\r\n          style={{ maxWidth: '100%', height: '180px' }}\r\n        />\r\n          <div className='top-left'>{name}</div>\r\n          <span className='text-start tag-card'>\r\n            {\r\n              tags.map((tag, i) => (\r\n                <Link key={i} to={`/post/tag/${tag}`}> #{tag}</Link>\r\n              ))\r\n            }\r\n            <MDBBtn\r\n              style={{float:'right'}}\r\n              tag='a'\r\n              color='none'\r\n              onClick={!user?.result ? null : handleLike}\r\n            >\r\n              {\r\n                !user?.result ? (\r\n                  <MDBTooltip title='Please login to like this post' tag='a'>\r\n                    <Likes />\r\n                  </MDBTooltip>\r\n                ) : (\r\n                  <Likes />\r\n                )\r\n              }\r\n            </MDBBtn>\r\n          </span>\r\n\r\n          <MDBCardBody>\r\n            <MDBCardTitle className='text-start'>{title}</MDBCardTitle>\r\n            <MDBCardText className='text-start'>\r\n              {\r\n                excerpt(description, 100)\r\n              }\r\n              <Link to={`/post/${_id}`}>Read More</Link>\r\n            </MDBCardText>\r\n          </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCardGroup>\r\n  );\r\n};\r\n\r\nexport default PostCard","import React from 'react';\r\nimport { MDBSpinner } from 'mdb-react-ui-kit';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <MDBSpinner role='status' className='text-center me-2' style={{ marginTop: '100px', width: '3rem', height: '3rem' }} >\r\n      <span className='visually-hidden'>Loading...</span>\r\n    </MDBSpinner>\r\n  );\r\n};\r\n\r\nexport default Spinner","import React from 'react'\r\nimport { MDBPagination, MDBPaginationItem, MDBBtn } from 'mdb-react-ui-kit';\r\n\r\nconst Pagination = ({ setCurrentPage, currentPage, numberOfPages, dispatch }) => {\r\n  const renderPagination = () => {\r\n    if (currentPage === numberOfPages && currentPage ===1) return null;\r\n    if (currentPage === 1) {\r\n      return (\r\n        <MDBPagination center className='mb-0'>\r\n          <MDBPaginationItem>\r\n            <p className='fw-bold mt-1'>1</p>\r\n          </MDBPaginationItem>\r\n          <MDBPaginationItem>\r\n            <MDBBtn\r\n              rounded\r\n              className='mx-2'\r\n              onClick={() => dispatch(setCurrentPage(currentPage + 1))}\r\n            >\r\n              Next\r\n            </MDBBtn>\r\n          </MDBPaginationItem>\r\n        </MDBPagination>\r\n      );\r\n    } else if (currentPage !== numberOfPages) {\r\n      return (\r\n        <MDBPagination center className='mb-0'>\r\n          <MDBPaginationItem>\r\n            <MDBBtn\r\n              rounded\r\n              className='mx-2'\r\n              onClick={() => dispatch(setCurrentPage(currentPage - 1))}\r\n            >\r\n              Prev\r\n            </MDBBtn>\r\n          </MDBPaginationItem>\r\n          <MDBPaginationItem>\r\n            <p className='fw-bold mt-1'>{currentPage}</p>\r\n          </MDBPaginationItem>\r\n          <MDBPaginationItem>\r\n            <MDBBtn\r\n              rounded\r\n              className='mx-2'\r\n              onClick={() => dispatch(setCurrentPage(currentPage + 1))}\r\n            >\r\n              Next\r\n            </MDBBtn>\r\n          </MDBPaginationItem>\r\n        </MDBPagination>\r\n      );\r\n    } else {\r\n      return (\r\n        <MDBPagination center className='mb-0'>\r\n          <MDBPaginationItem>\r\n            <MDBBtn\r\n              rounded\r\n              className='mx-2'\r\n              onClick={() => dispatch(setCurrentPage(currentPage - 1))}\r\n            >\r\n              Prev\r\n            </MDBBtn>\r\n          </MDBPaginationItem>\r\n          <MDBPaginationItem>\r\n            <p className='fw-bold mt-1'>{currentPage}</p>\r\n          </MDBPaginationItem>\r\n        </MDBPagination>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className='mt-4'>{renderPagination()}</div>\r\n  )\r\n}\r\n\r\nexport default Pagination","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MDBRow, MDBCol, MDBTypography, MDBContainer } from 'mdb-react-ui-kit';\r\n\r\nimport PostCard from '../components/PostCard';\r\nimport Spinner from '../components/Spinner';\r\n\r\nimport { getPosts, setCurrentPage } from '../features/postSlice';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst Home = () => {\r\n  const { posts, isLoading, currentPage, numberOfPages } = useSelector((state) => ({ ...state.posts}));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getPosts(currentPage));\r\n  }, [dispatch, currentPage]);\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <Spinner />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '15px',\r\n        maxWidth: '1000px',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <MDBRow className='mt-5'>\r\n        {\r\n          posts.length === 0 && (\r\n            <MDBTypography className='text-center mb-0' tag='h2' >\r\n              No Tours Found\r\n            </MDBTypography>\r\n          )\r\n        }\r\n\r\n        <MDBCol>\r\n          <MDBContainer>\r\n            <MDBRow className='row-cols-md-3 g-2' >\r\n              {\r\n                posts && posts?.map((post, i) => <PostCard key={i} { ...post } />)\r\n              }\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBCol>\r\n      </MDBRow>\r\n      <Pagination \r\n        setCurrentPage={setCurrentPage}\r\n        numberOfPages={numberOfPages}\r\n        currentPage={currentPage}\r\n        dispatch={dispatch}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as api from '../api';\r\n\r\nexport const login = createAsyncThunk('auth/login', async({formValue, navigate, toast}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.signIn(formValue);\r\n    toast.success('Login Successfully!');\r\n    navigate('/');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n})\r\nexport const register = createAsyncThunk('auth/register', async({formValue, navigate, toast}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.signUp(formValue);\r\n    toast.success('Registered Successfully!');\r\n    navigate('/');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n})\r\nexport const googleSignIn = createAsyncThunk('auth/googleSignIn', async({result, navigate, toast}, {rejectWithValue}) => {\r\n  try {\r\n    const response = await api.googleSignIn(result);\r\n    toast.success('google sign in Successfully!');\r\n    navigate('/');\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n})\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    error: '',\r\n    isLoading: false\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    setLogout: (state, action) => {\r\n      localStorage.clear();\r\n      state.user = null;\r\n    }\r\n  },\r\n  extraReducers(builder) {\r\n\t\tbuilder\r\n\t\t\t.addCase(login.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        localStorage.setItem('profile', JSON.stringify({...action.payload}));\r\n        state.user = action.payload;\r\n\t\t\t})\r\n\t\t\t.addCase(login.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(register.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        localStorage.setItem('profile', JSON.stringify({...action.payload}));\r\n        state.user = action.payload;\r\n\t\t\t})\r\n\t\t\t.addCase(register.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t})\r\n\t\t\t.addCase(googleSignIn.pending, (state) => {\r\n\t\t\t\tstate.isLoading = true;\r\n\t\t\t})\r\n\t\t\t.addCase(googleSignIn.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        localStorage.setItem('profile', JSON.stringify({...action.payload}));\r\n        state.user = action.payload;\r\n\t\t\t})\r\n\t\t\t.addCase(googleSignIn.rejected, (state, action) => {\r\n\t\t\t\tstate.isLoading = false;\r\n        state.error = action.payload.message;\r\n\t\t\t});\r\n\t},\r\n});\r\n\r\nexport const { setUser, setLogout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import React, {useState, useEffect } from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBCardFooter,\r\n  MDBValidation,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBSpinner,\r\n} from 'mdb-react-ui-kit';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { gapi } from 'gapi-script';\r\n\r\nimport { login, googleSignIn } from '../features/authSlice';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n}\r\nconst Login = () => {\r\n  const [formValue, setFormValue] = useState(initialState);\r\n  const { email, password } = formValue;\r\n\r\n  const { isLoading, error } = useSelector((state) => ({...state.auth}));\r\n\r\n  const clientId = '141620846333-oiepfcs7an6th0f5l1hjddfa6ujfimik.apps.googleusercontent.com'\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    error && toast.error(error);\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    const initClient = () => {\r\n      gapi.auth2.init({\r\n          clientId: clientId,\r\n          scope: 'https://www.googleapis.com/auth/spreadsheets.readonly'\r\n      });\r\n    };\r\n     gapi.load('client:auth2', initClient);\r\n }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email && password) {\r\n      dispatch(login({formValue, navigate, toast}))\r\n    }\r\n  };\r\n  const onInputChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setFormValue({...formValue, [name]: value });\r\n  };\r\n\r\n  const googleSuccess = (res) => {\r\n    const email = res?.profileObj?.email;\r\n    const name = res?.profileObj?.name;\r\n    const googleId = res?.googleId;\r\n    const token = res?.tokenId;\r\n    const result = { email, name, googleId, token, };\r\n\r\n    dispatch(googleSignIn({ result, navigate, toast }))\r\n  };\r\n  const googleFailure = (error) => {\r\n    console.log('error:', error);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '15px',\r\n        maxWidth: '450px',\r\n        alignContent: 'center',\r\n        marginTop: '120px',\r\n      }}\r\n    >\r\n      <MDBCard>\r\n        <MDBIcon fas icon='user-circle' className='fa-2x'/>\r\n        <h5>Sign In</h5>\r\n        <MDBCardBody>\r\n          <MDBValidation onSubmit={handleSubmit} noValidate className='row g-3'> \r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                label='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={onInputChange}\r\n                name='email'\r\n                required\r\n                validation=\"Please provide your email\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                label='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={onInputChange}\r\n                name='password'\r\n                required\r\n                validation=\"Please provide your password\"\r\n              />\r\n            </div>\r\n            <div className='col-12'>\r\n              <MDBBtn style={{ width: '100%'}} className='mt-2'>\r\n                {\r\n                  isLoading && (\r\n                    <MDBSpinner\r\n                      size='small'\r\n                      role='status'\r\n                      tag='span'\r\n                      className='me-2'\r\n                    />\r\n                  )\r\n                }\r\n                Login\r\n              </MDBBtn>\r\n            </div>\r\n          </MDBValidation>\r\n          <br />\r\n          <GoogleLogin\r\n            clientId={clientId}\r\n            render={(renderProp) => (\r\n              <MDBBtn\r\n                style={{width: '100%'}}\r\n                onClick={renderProp.onClick}\r\n                disabled={renderProp.disabled}\r\n                color='danger'\r\n              >\r\n                <MDBIcon className='me-2' fab icon='google' /> Login with google\r\n              </MDBBtn>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy='single_host_origin'\r\n          />\r\n        </MDBCardBody>\r\n        <MDBCardFooter>\r\n          <Link to='/Register'>\r\n            <p>Don't have an account? Sign up</p>\r\n          </Link>\r\n        </MDBCardFooter>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBCardFooter,\r\n  MDBValidation,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBSpinner,\r\n} from 'mdb-react-ui-kit';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { register } from '../features/authSlice';\r\n\r\nconst initialState = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n}\r\nconst Register = () => {\r\n  const [formValue, setFormValue] = useState(initialState);\r\n  const { firstName, lastName, email, password, confirmPassword } = formValue;\r\n\r\n  const { isLoading, error } = useSelector((state) => ({...state.auth}));\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    error && toast.error(error);\r\n  }, [error]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      return toast.error('Password should match')\r\n    }\r\n\r\n    if (email && password && firstName && lastName && confirmPassword) {\r\n      dispatch(register({formValue, navigate, toast}))\r\n    }\r\n  };\r\n  const onInputChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setFormValue({...formValue, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '15px',\r\n        maxWidth: '450px',\r\n        alignContent: 'center',\r\n        marginTop: '120px',\r\n      }}\r\n    >\r\n      <MDBCard>\r\n        <MDBIcon fas icon='user-circle' className='fa-2x'/>\r\n        <h5>Register</h5>\r\n        <MDBCardBody>\r\n          <MDBValidation onSubmit={handleSubmit} noValidate className='row g-3'> \r\n            <div className='col-md-6'>\r\n              <MDBInput \r\n                label='firstName'\r\n                type='text'\r\n                value={firstName}\r\n                onChange={onInputChange}\r\n                name='firstName'\r\n                required\r\n                validation=\"Please provide your first name\"\r\n              />\r\n            </div>\r\n            <div className='col-md-6'>\r\n              <MDBInput \r\n                label='lastName'\r\n                type='text'\r\n                value={lastName}\r\n                onChange={onInputChange}\r\n                name='lastName'\r\n                required\r\n                validation=\"Please provide your lastName\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                label='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={onInputChange}\r\n                name='email'\r\n                required\r\n                validation=\"Please provide your email\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                label='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={onInputChange}\r\n                name='password'\r\n                required\r\n                validation=\"Please provide your password\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                label='confirm password'\r\n                type='password'\r\n                value={confirmPassword}\r\n                onChange={onInputChange}\r\n                name='confirmPassword'\r\n                required\r\n                validation=\"Please confirm your password\"\r\n              />\r\n            </div>\r\n            <div className='col-12'>\r\n              <MDBBtn style={{ width: '100%'}} className='mt-2'>\r\n                {\r\n                  isLoading && (\r\n                    <MDBSpinner\r\n                      size='small'\r\n                      role='status'\r\n                      tag='span'\r\n                      className='me-2'\r\n                    />\r\n                  )\r\n                }\r\n                Sign Up\r\n              </MDBBtn>\r\n            </div>\r\n          </MDBValidation>\r\n        </MDBCardBody>\r\n        <MDBCardFooter>\r\n          <Link to='/Login'>\r\n            <p>Already registered? Login here</p>\r\n          </Link>\r\n        </MDBCardFooter>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBValidation,\r\n  MDBBtn,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport FileBase from 'react-file-base64';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../features/postSlice.js';\r\n\r\n\r\nconst initialState = {\r\n  title: '',\r\n  description: '',\r\n  tags: [],\r\n}\r\nconst Post = () => {\r\n  const [postData, setPostData] = useState(initialState);\r\n  const [tagErrMsg, setTagErrMsg] = useState(null);\r\n  \r\n  const { title, description, tags } = postData;\r\n  const { id } = useParams();\r\n\r\n  const { error, userPosts } = useSelector((state) => ({ ...state.posts }))\r\n  const { user } = useSelector((state) => ({ ...state.auth }));\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const postToEdit = userPosts.find((userPost) => userPost._id === id);\r\n      setPostData({ ...postToEdit });\r\n    }\r\n  }, [id, userPosts]);\r\n  \r\n\r\n  useEffect(() => {\r\n    error && toast.error(error);\r\n  }, [error])\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!tags.length) setTagErrMsg('Please provide some tags');\r\n\r\n    if (title && description && tags) {\r\n      const updatedPostData = { ...postData, name: user?.result?.name };\r\n\r\n      if (!id) {\r\n        dispatch(createPost({ updatedPostData, navigate, toast }));\r\n      } else {\r\n        dispatch(updatePost({ id, updatedPostData, toast, navigate }));\r\n      }\r\n\r\n      handleClear();\r\n    }\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPostData({...postData, [name]: value });\r\n  };\r\n\r\n  const handleAddTag = (tag) => {\r\n    setTagErrMsg(null);\r\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n  };\r\n\r\n  const handleDeleteTag = (deleteTag) => {\r\n    setPostData({\r\n      ...postData, \r\n      tags: postData.tags.filter((tag) => tag !== deleteTag),\r\n    });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setPostData({\r\n      title: '',\r\n      description: '',\r\n      tags: [],\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '15px',\r\n        maxWidth: '450px',\r\n        alignContent: 'center',\r\n        marginTop: '120px'\r\n      }}\r\n    >\r\n      <MDBCard alignment='center'>\r\n        <h5>{ id ? 'Update Post': 'Add New Post'}</h5>\r\n        <MDBCardBody>\r\n          <MDBValidation onSubmit={handleSubmit} noValidate className='row g-3'> \r\n            <div className='col-md-12'>\r\n              <MDBInput \r\n                type='text'\r\n                placeholder='Enter title'\r\n                value={title}\r\n                onChange={onInputChange}\r\n                className='form-control'\r\n                name='title'\r\n                required\r\n                validation=\"Please enter your title\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <textarea \r\n                type='text'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                className='form-control'\r\n                style={{ height: '100px' }}\r\n                onChange={onInputChange}\r\n                name='description'\r\n                required\r\n                validation=\"Please provide description\"\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <ChipInput\r\n                name='tags'\r\n                variant='outlined'\r\n                fullWidth\r\n                value={tags}\r\n                onAdd={(tag) => handleAddTag(tag)}\r\n                onDelete={(tag) => handleDeleteTag(tag)}\r\n              />\r\n              {\r\n                tagErrMsg && (\r\n                  <div className=\"tagErrMsg\">{tagErrMsg}</div>\r\n                )\r\n              }\r\n            </div>\r\n            <div className='d-flex justify-content-start'>\r\n              <FileBase\r\n                type='file'\r\n                multiple={false}\r\n                onDone={({base64}) => {\r\n                  setPostData({ ...postData, imageFile: base64 })\r\n                }}\r\n                onAdd={(tag) => handleAddTag(tag)}\r\n                onDelete={(tag) => handleDeleteTag(tag)}\r\n              />\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <MDBBtn style={{ width: '100%'}}>{ id ? 'Update': 'Submit'}</MDBBtn>\r\n              <MDBBtn \r\n                style={{ width: '100%'}}\r\n                className='mt-2'\r\n                color='danger'\r\n                onClick={handleClear}\r\n              >\r\n                Clear\r\n              </MDBBtn>\r\n            </div>\r\n          </MDBValidation>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React, { useState } from 'react'\r\nimport {\r\n  MDBNavbar,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavbarNav,\r\n  MDBNavbarItem,\r\n  MDBNavbarLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavbarBrand,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { setLogout } from '../features/authSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getPostsBySearch } from '../features/postSlice';\r\n\r\nconst Header = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const { user } = useSelector((state) => ({ ...state.auth }));\r\n\r\n  const token = user?.token\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  if (token) {\r\n    const decodedToken = decode(token);\r\n    if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n      dispatch(setLogout());\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    dispatch(setLogout());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (search) {\r\n      dispatch(getPostsBySearch(search));\r\n      navigate(`/post/search?searchQuery=${search}`);\r\n      setSearch('');\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MDBNavbar fixed='top' expand='lg' style={{ background: '#f0e6ea' }} >\r\n      <MDBContainer>\r\n        <MDBNavbarBrand\r\n          href='/'\r\n          style={{ color: '#606080', fontWeight: '600', fontSize: '22px'}}\r\n        >\r\n          Memories\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler\r\n          type='button'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n          onClick={() => setShow(!show)}\r\n          style={{ color: '#606080'}}\r\n        >\r\n          <MDBIcon icon='bars' fas />\r\n        </MDBNavbarToggler>\r\n        <MDBCollapse show={show} navbar>\r\n          <MDBNavbarNav right fullWidth={false} className='mb-2 mb-lg-0'>\r\n            {\r\n              user?.result?._id && (\r\n                <h5 style={{ marginRight: '30px', marginTop: '27px' }}>\r\n                  Logged in as: { user?.result?.name }\r\n                </h5>\r\n              )\r\n            }\r\n            <MDBNavbarItem>\r\n              <MDBNavbarLink href='/'>\r\n              <p className='header-text'>Home</p>\r\n              </MDBNavbarLink>\r\n            </MDBNavbarItem>\r\n            {\r\n              user?.result?._id && (\r\n            <>\r\n              <MDBNavbarItem>\r\n                <MDBNavbarLink href='/Post'>\r\n                  <p className='header-text'>Add Post</p>\r\n                </MDBNavbarLink>\r\n              </MDBNavbarItem>\r\n              <MDBNavbarItem>\r\n                <MDBNavbarLink href='/dashboard'>\r\n                  <p className='header-text'>Dashboard</p>\r\n                </MDBNavbarLink>\r\n              </MDBNavbarItem>\r\n            </>\r\n              )\r\n            }\r\n            {\r\n              user?.result?._id ? (\r\n                <MDBNavbarItem>\r\n                  <MDBNavbarLink href='/Login'>\r\n                    <p className='header-text' onClick={ handleLogout }>Logout</p>\r\n                  </MDBNavbarLink>\r\n                </MDBNavbarItem>\r\n              ) : (\r\n                <MDBNavbarItem>\r\n                  <MDBNavbarLink href='/Login'>\r\n                    <p className='header-text'>Login</p>\r\n                  </MDBNavbarLink>\r\n                </MDBNavbarItem>\r\n              )\r\n            }\r\n          </MDBNavbarNav>\r\n          <form className='d-flex input-group w-auto' onSubmit={handleSubmit}>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              placeholder='search post'\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <div style={{ marginTop: '5px', marginLeft: '5px' }}>\r\n              <MDBIcon fas icon='search' />\r\n            </div>\r\n          </form>\r\n        </MDBCollapse>\r\n      </MDBContainer>\r\n    </MDBNavbar>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {\r\n  MDBCard, \r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport excerpt from '../utilities/index.js'\r\n\r\nconst RelatedPosts = ({ relatedPosts, postId}) => {\r\n  return (\r\n    <>\r\n      {\r\n        relatedPosts && relatedPosts.length > 0 && (\r\n          <>\r\n            {\r\n              relatedPosts.length > 1 && <h4>related posts</h4>\r\n            }\r\n            <MDBRow className='row-col-1 row-cols-md-3 g-4'>\r\n              {\r\n                relatedPosts.filter((post) => post._id !== postId).splice(0, 3).map((relatedPost) => (\r\n                  <MDBCol key={relatedPost._id}>\r\n                    <MDBCard>\r\n                      <Link to={`/post/${relatedPost._id}`}>\r\n                        <MDBCardImage \r\n                          src={relatedPost.imageFile}\r\n                          alt={relatedPost.title}\r\n                          position='top'\r\n                        />\r\n                      </Link>\r\n                      <span className='text-start tag-card' >\r\n                        {\r\n                          relatedPost.tags.map((tag, i) => (\r\n                            <Link key={i} to={`/post/tag/${tag}`}> #{tag}</Link>\r\n                          ))\r\n                        }\r\n                      </span>\r\n                      <MDBCardBody>\r\n                        <MDBCardTitle className='text-start'>\r\n                          {\r\n                            relatedPost.title\r\n                          }\r\n                        </MDBCardTitle>\r\n                        <MDBCardText className='text-start'>\r\n                          {excerpt(relatedPost.description, 45)}\r\n                        </MDBCardText>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBCol>\r\n                ))\r\n              }\r\n            </MDBRow>\r\n          </>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RelatedPosts;","import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBCardHeader,\r\n  MDBCardBody,\r\n  MDBBtn,\r\n  MDBCardText,\r\n} from 'mdb-react-ui-kit';\r\nimport { commentPost } from '../features/postSlice';\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const [comments, setComments] = useState(post?.comments);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const id = post._id;\r\n  const commentsRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = async () => {\r\n    const value = `${user?.result?.name}: ${comment}`;\r\n    const newComments = await dispatch(commentPost({ id, value }));\r\n\r\n    console.log('comments', newComments);\r\n    setComments(newComments.payload.comments);\r\n    setComment('');\r\n\r\n    commentsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n \r\n   return (\r\n    <MDBCard alignment='start'>\r\n      <MDBCardHeader>Comments ({comments?.length})</MDBCardHeader>\r\n      <MDBCardBody>\r\n        {\r\n          user?.result?.name && (\r\n            <div className='col-md-6 d-flex'>\r\n              <MDBIcon fas icon='user-circle' className='fa-2x'/>\r\n              <MDBInput \r\n                label='Comment'\r\n                type='text'\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                name='comment'\r\n              />\r\n              <MDBBtn\r\n                color='dark'\r\n                disabled={!comment}\r\n                onClick={handleClick}\r\n              >Comment</MDBBtn>\r\n            </div>\r\n          )\r\n        }\r\n        <MDBCardText className='lead mb-0 text-start'>\r\n          {\r\n            comments?.map((c, i) => (\r\n              <p key={i}><strong>{c?.split(': ')[0]}</strong>: {c?.split(': ')[1]}</p>\r\n            ))\r\n          }\r\n          <div ref={commentsRef} />\r\n        </MDBCardText>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  )\r\n}\r\n\r\nexport default CommentSection","import React, { useEffect} from 'react'\r\nimport {\r\n  MDBCard, \r\n  MDBCardBody,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBContainer,\r\n  MDBIcon,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport RelatedPosts from '../components/RelatedPosts';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport { getPost, getRelatedPosts } from '../features/postSlice';\r\nimport CommentSection from '../components/CommentSection';\r\n\r\nconst SinglePost = () => {\r\n  const dispatch = useDispatch();\r\n  const { post, relatedPosts, isLoading } = useSelector((state) => ({ ...state.posts}));\r\n  const { id } = useParams();\r\n\r\n  const tags = post?.tags;\r\n\r\n  useEffect(() => {\r\n    if (tags) {\r\n      dispatch(getRelatedPosts(tags));\r\n    }\r\n  }, [tags, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getPost(id));\r\n    }\r\n  }, [id, dispatch]);\r\n  \r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard className='mb-3 mt-2'>\r\n        <MDBCardImage \r\n          position='top'\r\n          style={{ widith: '100%', maxHeight: '600px' }}\r\n          src={post.imageFile}\r\n          alt={post.title}\r\n        />\r\n        <MDBCardBody>\r\n          <h3>{post?.title}</h3>\r\n          <span>\r\n            <p className='text-start post-name'>Created by: {post.name}</p>\r\n          </span>\r\n          <div style={{ float: 'left' }}>\r\n            <span className='text-start'>\r\n              {\r\n                post && post.tags && post.tags.map((tag, i) => (\r\n                  <Link key={i} to={`/post/tag/${tag}`}> #{tag}</Link>\r\n                ))\r\n              }\r\n            </span>\r\n          </div>\r\n          <br />\r\n          <MDBCardText className='text-start mt-2'>\r\n            <MDBIcon \r\n              style={{ float: 'left', margin: '5px' }}\r\n              far\r\n              icon='calendar-alt'\r\n              size='lg'\r\n            />\r\n            <small className='text-muted'>\r\n              {moment(post.createdAt).fromNow()}\r\n            </small>\r\n          </MDBCardText>\r\n          <MDBCardText className='lead mb-0 text-start'>\r\n            {\r\n              post.description\r\n            }\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n        {/* Related posts */}\r\n        <RelatedPosts relatedPosts={relatedPosts} postId={id} />\r\n      </MDBCard>\r\n      <CommentSection post={post} />\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default SinglePost","import React, { useEffect } from 'react'\r\nimport {\r\n  MDBCard, \r\n  MDBCardBody,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBIcon,\r\n  MDBCardTitle,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCardGroup,\r\n  MDBBtn,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Spinner from '../components/Spinner';\r\n\r\nimport excerpt from '../utilities/index.js'\r\n\r\nimport { getPostsByUser, deletePost } from '../features/postSlice';\r\n\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useSelector((state) => ({ ...state.auth }));\r\n  const { userPosts, isLoading } = useSelector((state) => ({ ...state.posts }));\r\n  const userId = user?.result?._id || user?.result?.googleId;\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userId) dispatch(getPostsByUser(userId));\r\n  }, [userId, dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Spinner />\r\n    );\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this post?')){\r\n      dispatch(deletePost({ id, toast }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '120px',\r\n        maxWidth: '900px',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <h4 className='text-center'>Dashboard: {user?.result?.name}</h4>\r\n      <hr style={{ maxWidth: '570px' }} />\r\n      {\r\n        userPosts && userPosts.map((userPost) => (\r\n          <MDBCardGroup key={userPost._id}>\r\n            <MDBCard\r\n              style={{ maxWidth: '600px'}}\r\n              className='mt-2'\r\n            >\r\n              <MDBRow className='g-0'>\r\n                <MDBCol md='4'>\r\n                  <MDBCardImage \r\n                    className='rounded'\r\n                    src={userPost.imageFile}\r\n                    alt={userPost.title}\r\n                    fluid\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md='8'>\r\n                  <MDBCardBody>\r\n                    <MDBCardTitle className='text-start'>\r\n                      { userPost.title}\r\n                    </MDBCardTitle>\r\n                    <MDBCardText className='text-start'>\r\n                      <small className='text-muted'>\r\n                        {\r\n                          excerpt(userPost.description, 50)\r\n                        }\r\n                      </small>\r\n                    </MDBCardText>\r\n                    <div\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        float: 'right',\r\n                        marginTop: '-60px',\r\n                      }}\r\n                    >\r\n                      <MDBBtn className='mt-1' tag='a' color='none'>\r\n                        <MDBIcon \r\n                          fas\r\n                          icon='trash'\r\n                          style={{ color: '#dd4b39' }}\r\n                          size='lg'\r\n                          onClick={() => handleDelete(userPost._id)}\r\n                        />\r\n                      </MDBBtn>\r\n                      <Link to={`/editPost/${userPost._id}`}>\r\n                        <MDBIcon \r\n                          fas\r\n                          icon='edit'\r\n                          style={{ color: '#55acee', marginLeft: '10px' }}\r\n                          size='lg'\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCard>\r\n          </MDBCardGroup>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React, { useEffect, useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(5);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount);\r\n    }, 1000)\r\n  \r\n    count === 0 && navigate('/login');\r\n    return () => clearInterval(interval);\r\n  }, [count, navigate]);\r\n  \r\n  return (\r\n    <div style={{ marginTop: '100px' }}><h5>Redirecting you in {count} seconds</h5></div>\r\n  )\r\n}\r\n\r\nexport default LoadingToRedirect","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { user } =  useSelector((state) => ({ ...state.auth }));\r\n  return user ? children : <LoadingToRedirect />;\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='text-center' style={{ marginTop: '100px'}}><h4>Nothing found</h4></div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React, { useEffect } from 'react'\r\nimport {\r\n  MDBCard, \r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardImage,\r\n  MDBCardGroup,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Spinner from '../components/Spinner';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getPostsByTag } from '../features/postSlice';\r\nimport excerpt from '../utilities/index.js'\r\n\r\nconst TagPosts = () => {\r\n  const { tagPosts, isLoading } = useSelector((state) => ({ ...state.posts}));\r\n  \r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { tag } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (tag) {\r\n      dispatch(getPostsByTag(tag));\r\n    }\r\n  }, [tag, dispatch]);\r\n\r\n  if (isLoading) return <Spinner />\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: 'auto',\r\n        padding: '120px',\r\n        maxWidth: '900px',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <h3 className='text-center'>Posts with tag. {tag}</h3>\r\n      <hr style={{ maxWidth: '570px'}}/>\r\n      {\r\n        tagPosts && tagPosts.map((tagPost) => (\r\n          <MDBCardGroup key={tagPost._id}>\r\n            <MDBCard style={{ maxWidth: '600px'}} className='mt-2'>\r\n              <MDBRow className='g-0'>\r\n                <MDBCol md='4'>\r\n                  <MDBCardImage \r\n                    className='rounded'\r\n                    src={tagPost.imageFile}\r\n                    alt={tagPost.title}\r\n                    fluid\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol md='8'>\r\n                  <MDBCardBody>\r\n                    <MDBCardTitle className='text-start'>\r\n                      {\r\n                        tagPost.title\r\n                      }\r\n                    </MDBCardTitle>\r\n                    <MDBCardText className='text-start'>\r\n                      {\r\n                        excerpt(tagPost.description, 40)\r\n                      }\r\n                    </MDBCardText>\r\n                    <div\r\n                      style={{ float: 'left', marginTop: '-10px'}}\r\n                    >\r\n                      <MDBBtn\r\n                        size='sm'\r\n                        rounded\r\n                        color='info'\r\n                        onClick={() => navigate(`/post/${tagPost._id}`)}\r\n                      >\r\n                        Read More\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCard>\r\n          </MDBCardGroup>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagPosts","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport './app.css'\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Post from './pages/Post';\r\nimport Header from './components/Header';\r\nimport SinglePost from './pages/SinglePost';\r\nimport { setUser } from './features/authSlice';\r\nimport Dashboard from './pages/Dashboard';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport NotFound from './pages/NotFound';\r\nimport TagPosts from './pages/TagPosts';\r\n\r\nconst App = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = JSON.parse(localStorage.getItem('profile'));\r\n\tuseEffect(() => {\r\n\t\tdispatch(setUser(user));\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<Header />\r\n\t\t\t<ToastContainer />\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path='/' element={ <Home />} />\r\n\t\t\t\t\t<Route path='/post/search' element={ <Home />} />\r\n\t\t\t\t\t<Route path='/post/tag/:tag' element={ <TagPosts />} />\r\n\t\t\t\t\t<Route path='/login' element={ <Login />} />\r\n\t\t\t\t\t<Route path='/register' element={ <Register />} />\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/post' \r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute>\r\n\t\t\t\t\t\t\t\t<Post />\r\n\t\t\t\t\t\t\t</PrivateRoute> \r\n\t\t\t\t\t} />\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/editPost/:id' \r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute>\r\n\t\t\t\t\t\t\t\t<Post />\r\n\t\t\t\t\t\t\t</PrivateRoute> \r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t<Route path='/post/:id' element={ <SinglePost />} />\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/dashboard' \r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute>\r\n\t\t\t\t\t\t\t\t<Dashboard />\r\n\t\t\t\t\t\t\t</PrivateRoute> \r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t<Route path='*' element={<NotFound />}/>\r\n\t\t\t\t</Routes>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport './index.css'\r\nimport App from './App.js';\r\nimport authReducer from './features/authSlice.js';\r\nimport postReducer from './features/postSlice.js';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tauth: authReducer,\r\n\t\tposts: postReducer,\r\n\t},\r\n});\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n\t<BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</BrowserRouter>,\r\n);"],"sourceRoot":""}